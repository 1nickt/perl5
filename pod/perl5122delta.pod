=encoding utf8

=head1 NAME

[ this is a template for a new perldelta file. Any text flagged as
XXX needs to be processed before release. ]

perldelta - what is new for perl v5.12.2

=head1 DESCRIPTION

This document describes differences between the 5.12.2 release and
the 5.12.2 release.

If you are upgrading from an earlier release such as 5.12.0, first read
L<perl5121delta>, which describes differences between 5.12.0 and
5.12.1.

=head1 Notice

XXX Any important notices here

=head1 Incompatible Changes

There are no changes intentionally incompatible with 5.12.1. If any exist, they
are bugs and reports are welcome.

=head1 Core Enhancements

XXX New core language features go here. Summarise user-visible core language
enhancements. Particularly prominent performance optimisations could go
here, but most should go in the L</Performance Enhancements> section.

=head1 New Platforms

XXX List any platforms that this version of perl compiles on, that previous
versions did not. These will either be enabled by new files in the F<hints/>
directories, or new subdirectories and F<README> files at the top level of the
source tree.

=head1 Modules and Pragmata

XXX All changes to installed files in F<cpan/>, F<dist/>, F<ext/> and F<lib/>
go here.  If Module::CoreList is updated, generate an initial draft of the
following sections using F<Porting/corelist-perldelta.pl>, which prints stub
entries to STDOUT.  Results can be pasted in place of the '=head2' entries
below.  A paragraph summary for important changes should then be added by hand.
In an ideal world, dual-life modules would have a F<Changes> file that could be
cribbed.

=head2 New Modules and Pragmata

This release does not introduce any new modules or pragmata.

=head2 Pragmata Changes

In the previous release, C<no I<VERSION>;> statements triggered a bug
which could cause L<feature> bundles to be loaded and L<strict> mode to
be enabled unintentionally.

=head2 Updated Modules

=over 4

=item C<Carp>

Upgraded from version 1.16 to 1.17.

L<Carp> now detects incomplete L<caller()|perlfunc/"caller EXPR"> overrides and
avoids using bogus C<@DB::args>. To provide backtraces, Carp relies on particular behaviour of the caller builtin. Carp now detects if other code has overriden this with an incomplete implementation, and modifies its backtrace accordingly. Previously incomplete overrides would cause incorrect values in backtraces (best case), or obscure fatal errors (worst case)

This fixes certain cases of C<Bizarre copy of ARRAY> caused by modules overriding C<caller()> incorrectly.

=item C<CPANPLUS>

    Backport patch from CPANPLUS-0.9004 to cpanp-run-perl This resolves RT #55964 and RT #57106 relating to the failure to install distributions that use Module::Install::DSL 

=item C<File::Glob>

 In 5.6.2, a failure to find a CORE::GLOBAL::glob after loading File::Glob would result in a fallback to external glob via pp_glob.  Now it crashes.  The attached patch should fix this.

=item C<File::Copy>

Resolve issue #74974: document File::Copy::copy(FILE, DIR)


=back

=head2 Removed Modules and Pragmata

This release does not remove any modules or pragmata.

=head1 Utility Changes

XXX Changes to installed programs such as F<perlbug> and F<xsubpp> go
here. Most of these are built within the directories F<utils> and F<x2p>.

=over 4

=item F<perlbug>

=over 

=item * 

Always allow change of sender address The code that guessed a default sender address would under some circumstances not display this guess to the user with the option to change it. Specifically, if $Config{cf_me} eq {login id of the user running perlbug}.

=item * 

-d,-v: fix uninit value warnings

=back

=back

=head1 New Documentation

XXX Changes which create B<new> files in F<pod/> go here.

=over 4

=item L<XXX>

XXX

=back

=head1 Changes to Existing Documentation

XXX Changes which significantly change existing files in F<pod/> go here.
Any changes to F<pod/perldiag.pod> should go in L</New or Changed Diagnostics>.

=over

=item *

Add additional notes regarding srand and forking perldoc -f srand states that typical use requires no srand() to be called.  This is true with the exception of forking where you may not want the same seed across various child processes (i.e. mod_perl).  This patch simply adds a note reminding the reader of this fact and more specifically states that srand should only be called once per *process* (instead of the previous language of once per *script*).

=item *

Add the policy on compatibility and deprecation to perlpolicy.pod, along with definitions of terms like "deprecation"

=item *

Attempt at improving the perlipc docs

=item *

cautionary note about "no VERSION"

=item *

Clarify Perl's L<INSTALL> file to explicitly state that Perl requires a C89 compliant ANSI C Compiler.

=item *

Clarify that mail to perlbug also goes to p5p

=item *

Document IO::Socket getsockopt and setsockopt

=item *

Document that F<alarm()> on Windows cannot interrupt blocking I/O

=item *

Do not advertise Math::TrulyRandom, which hasn't been updated since 1996

=item *

* FAQ sync

=item *

Format perlhist consistently by maint/dev track

=item *

Improvements to git instructions in perlrepository.pod

=item *

Link to perlport/PLATFORMS from the $^O docs

=item *

perlrun.pod: Specify -0400 behavior All values -0400 through -0777 have the same effect, even though previously -0777 was the only one mentioned..

=item *

Point submitters to perlbug@perl.org, not perl5-porters@perl.org We usually want patches in RT. Patches should only go to perl5-porters if they're intended purely for discussion.

=item *

Spell-check fixes in ext, lib

=item *

To ease user confusion, document $# and $*, two special variables that were removed in earlier versions of Perl

=item *

Update perlhist.pod for 5.10.1-5.12.1

=item *

Update rsync sources in perlhack

=back

=head3 L<perlfaq>

=over 4

=item *

The version of L<perlfaq> shipped with the perl core has been updated to the
latest official FAQ version as available at
L<git://github.com/briandfoy/perlfaq.git>.

=back

=head3 L<perlport>

=over 4

=item *

Documented a L<limitation|perlport/alarm> of L<alarm()|perlfunc/"alarm SECONDS">
on Win32.

=back

=head3 L<perlvar>

=over 4

=item *

L<$#|perlvar/"$#"> and L<$*|perlvar/"$*"> have been documented as removed.

=back

=head1 Performance Enhancements

XXX Changes which enhance performance without changing behaviour go here. There
may well be none in a stable release.

=over 4

=item *

XXX

=back

=head1 Installation and Configuration Improvements

XXX Changes to F<Configure>, F<installperl>, F<installman>, and analogous tools
go here.

=head2 Configuration improvements

XXX

=head2 Compilation improvements

=over

=item *

    Fix clang "incompatible operand types" error in ternary expressions.

=item *

 Fix d_u32align probe on ARM

=item *

    Skip suid File::Copy tests on a nosuid partition.  Perl builds without errors in a nosuid /tmp with this patch.

=back

=head2 Platform Specific Changes

=over 4

=item VMS

=over 4

=item *

F<git_version.h> will now be installed, just like on all the other
architectures.

=item *

Several memory leaks in L<stat()|perlfunc/"stat FILEHANDLE"> has been fixed.

=back

=item AIX

=over 4

=item *

A new configure probe has been added to avoid memory alignment problems.

=back

=back

=head1 Selected Bug Fixes

XXX Important bug fixes in the core language are summarised here.
Bug fixes in files in F<ext/> and F<lib/> are best summarised in
L</Modules and Pragmata>.

=over 4

=item *

A possible segfault in the C<T_PRTOBJ> default typemap has been fixed.



=item *

Fixed possible memory leak when using L<caller()|perlfunc/"caller EXPR"> to set
C<@DB::args>.

=item *

Several memory leaks when loading XS modules were fixed.

=item *

A potential crash in how exceptions are propagated has been fixed.

=item *

unpack() didn't handle scalar context correctly for %32H and %32u split() would crash because the third item on the stack wasn't the regular expression it expected.  unpack("%2H", ...) would return both the unpacked result and the checksum on the stack, similarly for unpack("%2u", ...). [perl #73814]


=item *

In pp_require, with code refs in @INC, avoid using memory after free().

=item *

Save the popped cx->blk_eval.old_namesv before calling LEAVE It's fine to still refer to cx members between POPEVAL and LEAVE, but there are a few places where the namesv is read after LEAVE happens. This is bad because LEAVE can call arbitrary code ; in particular, it can call a destructor that does call_sv(cv, G_EVAL), in which case the old eval context cx gets overwritten by the new one and cx->blk_eval.old_namesv points to garbage.



=back

=head1 New or Changed Diagnostics

XXX New or changed warnings emitted by the core's C<C> code go here.

=over 4

=item C<XXX>

XXX

=back

=head1 Changed Internals

XXX Changes which affect the interface available to C<XS> code go here.

=over 4

=item *

XXX

=back

=head1 New Tests

XXX Changes which create B<new> files in F<t/> go here. Changes to
existing files in F<t/> aren't worth summarising, although the bugs that
they represent may be.

=over 4

=item F<XXX>

XXX

=back

=head1 Known Problems

XXX Descriptions of platform agnostic bugs we know we can't fix go here. Any
tests that had to be C<TODO>ed for the release would be noted here, unless
they were specific to a particular platform (see below).

This is a list of some significant unfixed bugs, which are regressions
from either 5.XXX.XXX or 5.XXX.XXX.

=over 4

=item *

XXX

=back

=head1 Deprecations

XXX Add any new known deprecations here.

The following items are now deprecated.

=over 4

=item *

XXX

=back

=head1 Platform Specific Notes

XXX Any changes specific to a particular platform. VMS and Win32 are the usual
stars here. It's probably best to group changes under the same section layout
as the main perldelta

=head2 AIX

=over 

=item *
Fix for README.aix and XL C/C++ V11 Hello, I have attached a small doc fix for README.aix. It contains information regarding the new XL C/C++ V11 compiler. This patch is only for bleed.  I have already posted the correct fix for maint-5.12.

=back

=head2 Windows

=over

=item *

When building perl with the mingw64 x64 cross-compiler 'incpath', 'libpth', 'ldflags', 'lddlflags' and 'ldflags_nolargefiles' values in Config.pm and Config_heavy.pl are not being set correctly because, with that compiler, the include and lib directories are not immediately below $(CCHOME).

=back

=head2 VMS

=over

=item *

Fix nasty memory leak in vms.c:Perl_flex_stat_int().

=item *

Install git_version.h on VMS.  This was an oversight in 5.12.0 and without it some extension builds fail.

=item *

Plug a memory leak   In Perl_rename() we were allocating the same thing twice.

=item *

Plug a memory leak    In vms_fid_to_name() (used by realpath() and realname()), we had another flagrant omission of freeing local storage.

=back

=head1 Obituary

XXX If any significant core contributor has died, we've added a short obituary
here.

=head1 Acknowledgements

XXX The list of people to thank goes here.


=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles
recently posted to the comp.lang.perl.misc newsgroup and the perl
bug database at http://rt.perl.org/perlbug/ .  There may also be
information at http://www.perl.org/ , the Perl Home Page.

If you believe you have an unreported bug, please run the B<perlbug>
program included with your release.  Be sure to trim your bug down
to a tiny but sufficient test case.  Your bug report, along with the
output of C<perl -V>, will be sent off to perlbug@perl.org to be
analysed by the Perl porting team.

If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send
it to perl5-security-report@perl.org. This points to a closed subscription
unarchived mailing list, which includes all the core committers, who be able
to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported. Please only use this address for
security issues in the Perl core, not for modules independently
distributed on CPAN.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details
on what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
