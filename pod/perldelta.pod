=encoding utf8

=head1 NAME

[ this is a template for a new perldelta file.  Any text flagged as XXX needs
to be processed before release. ]

perldelta - what is new for perl v5.20.2

=head1 DESCRIPTION

This document describes differences between the 5.20.1 release and the 5.20.2
release.

If you are upgrading from an earlier release such as 5.20.0, first read
L<perl5201delta>, which describes differences between 5.20.0 and 5.20.1.

=head1 Notice

XXX Any important notices here

=head1 Security

XXX Any security-related notices go here.  In particular, any security
vulnerabilities closed should be noted here rather than in the
L</Selected Bug Fixes> section.

[ List each security issue as a =head2 entry ]

=head1 Incompatible Changes

There are no changes intentionally incompatible with 5.20.1.  If any exist,
they are bugs, and we request that you submit a report.  See L</Reporting Bugs>
below.

=head1 Performance Enhancements

XXX Changes which enhance performance without changing behaviour go here.
There may well be none in a stable release.

[ List each enhancement as a =item entry ]

=over 4

=item *

XXX

=back

=head1 Modules and Pragmata

=head2 Updated Modules and Pragmata

=over 4

=item *

L<attributes> has been upgraded from version 0.22 to 0.23.

The usage of C<memEQs> in the XS has been corrected.
L<[perl #122701]|https://rt.perl.org/Ticket/Display.html?id=122701>

=item *

L<Data::Dumper> has been upgraded from version 2.151 to 2.151_01.

Fixes CVE-2014-4330 by adding a configuration variable/option to limit
recursion when dumping deep data structures.

=item *

L<Errno> has been upgraded from version 1.20_03 to 1.20_05.

Warnings when building the XS on Windows with the Visual C++ compiler are now
avoided.

=item *

L<feature> has been upgraded from version 1.36 to 1.36_01.

The C<postderef> feature has now been documented.  This feature was actually
added in Perl 5.20.0 but was accidentally omitted from the feature
documentation until now.

=item *

L<IO::Socket> has been upgraded from version 1.37 to 1.38.

Document the limitations of the isconnected() method.  [perl #123096]

=item *

PathTools has been upgraded from version 3.48 to 3.48_01.

A warning from the B<gcc> compiler is now avoided when building the XS.

=item *

L<PerlIO::scalar> has been upgraded from version 0.18 to 0.18_01.

Reading from a position well past the end of the scalar now correctly
returns end of file.  [perl #123443]

Seeking to a negative position still fails, but no longer leaves the
file position set to a negation location.

C<eof()> on a C<PerlIO::scalar> handle now properly returns true when
the file position is past the 2GB mark on 32-bit systems.

=item *

L<Storable> has been upgraded from version 2.49 to 2.49_01.

Minor grammatical change to the documentation only.

=back

=head1 Documentation

XXX Changes to files in F<pod/> go here.  Consider grouping entries by
file and be sure to link to the appropriate page, e.g. L<perlfunc>.

=head2 New Documentation

XXX Changes which create B<new> files in F<pod/> go here.

=head3 L<XXX>

XXX Description of the purpose of the new file here

=head2 Changes to Existing Documentation

XXX Changes which significantly change existing files in F<pod/> go here.
However, any changes to F<pod/perldiag.pod> should go in the L</Diagnostics>
section.

=head3 L<XXX>

=over 4

=item *

XXX Description of the change here

=item *

L<perlsyn>: An ambiguity in the documentation of the Ellipsis statement has
been corrected. [perl #122661]

=back

=head1 Diagnostics

The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see L<perldiag>.

XXX New or changed warnings emitted by the core's C<C> code go here.  Also
include any changes in L<perldiag> that reconcile it to the C<C> code.

=head2 Changes to Existing Diagnostics

XXX Changes (i.e. rewording) of diagnostic messages go here

=over 4

=item *

XXX Describe change here

=back

=head1 Utility Changes

XXX Changes to installed programs such as F<perlbug> and F<xsubpp> go here.
Most of these are built within the directories F<utils> and F<x2p>.

[ List utility changes as a =head2 entry for each utility and =item
entries for each change
Use L<XXX> with program names to get proper documentation linking. ]

=head2 L<XXX>

=over 4

=item *

XXX

=back

=head1 Configuration and Compilation

XXX Changes to F<Configure>, F<installperl>, F<installman>, and analogous tools
go here.  Any other changes to the Perl build process should be listed here.
However, any platform-specific changes should be listed in the
L</Platform Support> section, instead.

[ List changes as a =item entry ].

=over 4

=item *

XXX

=back

=head1 Testing

XXX Any significant changes to the testing of a freshly built perl should be
listed here.  Changes which create B<new> files in F<t/> go here as do any
large changes to the testing harness (e.g. when parallel testing was added).
Changes to existing files in F<t/> aren't worth summarizing, although the bugs
that they represent may be covered elsewhere.

[ List each test improvement as a =item entry ]

=over 4

=item *

XXX

=back

=head1 Platform Support

XXX Any changes to platform support should be listed in the sections below.

[ Within the sections, list each platform as a =item entry with specific
changes as paragraphs below it. ]

=head2 Platform-Specific Notes

XXX List any changes for specific platforms.  This could include configuration
and compilation changes or changes in portability/compatibility.  However,
changes within modules for platforms should generally be listed in the
L</Modules and Pragmata> section.

=over 4

=item XXX-some-platform

XXX

=back

=head1 Internal Changes

XXX Changes which affect the interface available to C<XS> code go here.  Other
significant internal changes for future core maintainers should be noted as
well.

[ List each change as a =item entry ]

=over 4

=item *

XXX

=back

=head1 Selected Bug Fixes

XXX Important bug fixes in the core language are summarized here.  Bug fixes in
files in F<ext/> and F<lib/> are best summarized in L</Modules and Pragmata>.

[ List each fix as a =item entry ]

=over 4

=item *

AIX now sets the length in C<< getsockopt >> correctly. [perl #120835],
[rt.cpan.org #91183], [rt.cpan.org #85570].

=item *

In Perl 5.20.0, C<$^N> accidentally had the internal UTF8 flag turned off
if accessed from a code block within a regular expression, effectively
UTF8-encoding the value.  This has been fixed.  [perl #123135]

=item *

Various cases where the name of a sub is used (autoload, overloading, error
messages) used to crash for lexical subs, but have been fixed.

=item *

An assertion failure when parsing C<sort> with debugging enabled has been
fixed.  [perl #122771]

=item *

Loading UTF8 tables during a regular expression match could cause assertion
failures under debugging builds if the previous match used the very same
regular expression.  [perl #122747]

=item *

Due to a mistake in the string-copying logic, copying the value of a state
variable could instead steal the value and undefine the variable.  This
bug, introduced in 5.20, would happen mostly for long strings (1250 chars
or more), but could happen for any strings under builds with copy-on-write
disabled.  [perl #123029]

=item *

Fixed a bug that could cause perl to execute an infite loop during
compilation. [perl #122995]

=item *

On Win32, restoring in a child pseudo-process a variable that was
C<local()>ed in a parent pseudo-process before the C<fork> happened caused
memory corruption and a crash in the child pseudo-process (and therefore OS
process).  [perl #40565]

=item *

Tainted constants evaluated at compile time no longer cause unrelated
statements to become tainted.  [perl #122669]

=item *

Calling C<write> on a format with a C<^**> field could produce a panic
in sv_chop() if there were insufficient arguments or if the variable
used to fill the field was empty.  [perl #123245]

=item *

In perl 5.20.0, C<sort CORE::fake> where 'fake' is anything other than a
keyword started chopping of the last 6 characters and treating the result
as a sort sub name.  The previous behaviour of treating "CORE::fake" as a
sort sub name has been restored.  [perl #123410]

=item *

A bug in regular expression patterns that could lead to segfaults and
other crashes has been fixed.  This occurred only in patterns compiled
with C<"/i">, while taking into account the current POSIX locale (this usually
means they have to be compiled within the scope of C<S<"use locale">>),
and there must be a string of at least 128 consecutive bytes to match.
[perl #123539]

=item *

C<qr/@array(?{block})/> no longer dies with "Bizarre copy of ARRAY".
[#123344]

=item *

C<gmtime> no longer crashes with not-a-number values.  [perl #123495]

=item *

Certain syntax errors in substitutions, such as C<< s/${<>{})// >>, would
crash, and had done so since Perl 5.10.  (In some cases the crash did not
start happening till 5.16.)  The crash has, of course, been fixed.
[perl #123542]

=back

=head1 Known Problems

XXX Descriptions of platform agnostic bugs we know we can't fix go here.  Any
tests that had to be C<TODO>ed for the release would be noted here.  Unfixed
platform specific bugs also go here.

[ List each fix as a =item entry ]

=over 4

=item *

XXX

=back

=head1 Errata From Previous Releases

=over 4

=item *

A regression has been fixed that was introduced in v5.20.0 (fixed in
v5.20.1 as well as here) in which a UTF-8 encoded regular expression
pattern that contains a single ASCII lowercase letter does not match its
uppercase counterpart. [perl #122655]

=back

=head1 Obituary

XXX If any significant core contributor has died, we've added a short obituary
here.

=head1 Acknowledgements

XXX Generate this with:

  perl Porting/acknowledgements.pl v5.20.1..HEAD

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the perl bug database at
https://rt.perl.org/ .  There may also be information at
http://www.perl.org/ , the Perl Home Page.

If you believe you have an unreported bug, please run the L<perlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send it
to perl5-security-report@perl.org.  This points to a closed subscription
unarchived mailing list, which includes all the core committers, who will be
able to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported.  Please only use this address for
security issues in the Perl core, not for modules independently distributed on
CPAN.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
