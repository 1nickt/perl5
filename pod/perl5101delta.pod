=head1 NAME

perldelta - what is new for perl v5.10.1

=head1 DESCRIPTION

This document describes differences between the 5.10.0 release and
the 5.10.1 release.

If you are upgrading from an earlier release such as 5.8.8, first read
the L<perl5100delta>, which describes differences between 5.8.8 and
5.10.0

=head1 Incompatible Changes

=over

=item *

The semantics of C<use feature :5.10*> have changed slightly.
See L<"Modules and Pragmata"> for more information.

=item *

It is now a run-time error to use the smart match operator C<~~>
with an object that has no overload defined for it. (This way
C<~~> will not break encapsulation by matching against the
object's internal representation as a reference.)

=item *

The version control system used for the development of the perl
interpreter has been switched from Perforce to git.  This is mainly an
internal issue that only affects people actively working on the perl core;
but it may have minor external visibility, for example in some of details
of the output of C<perl -V>. See L<perlrepository> for more information.

=item *

The internal structure of the C<ext/> directory in the perl source has
been reorganised. In general, a module C<Foo::Bar> who's source was
stored under F<ext/Foo/Bar/> is now located under F<ext/Foo-Bar/>. Also,
some modules have been moved from F<lib/> to F<ext/>. This is purely a
source tarball change, and should make no difference to the compilation or
installation of perl, unless you have a very customised build process that
explicitly relies on this structure, or which hard-codes the C<nonxs_ext>
F<Configure> parameter. Specifically, this change does not by default
alter the location of any files in the final installation.

=back


=head1 Core Enhancements

=head2 Unicode Character Database 5.1.0

The copy of the Unicode Character Database included in Perl 5.10.1 has
been updated to 5.1.0 from 5.0.0. See
L<http://www.unicode.org/versions/Unicode5.1.0/#NotableChanges> for the
notable changes.

=head2 A proper interface for pluggable Method Resolution Orders

XXX Nicholas said he needs to document the following change, at which
point update this entry (b2685f0c86 2008/12/27)

=head2 The C<overloading> pragma

This pragma allows you to lexically disable or enable overloading
for some or all operations. (Yuval Kogman)


=head1 Modules and Pragmata

=head2 Pragmata Changes

=over 4

=item C<overloading>

See L</"The C<overloading> pragma"> above.

=back


=head2 New Modules

=over

=item *

C<autodie> is a new lexically-scoped alternative for the C<Fatal> module.
The bundled version is 1.999.

=item *

C<Compress::Raw::Bzip2> has been added to the core (version 2.015).

=item *

C<Parse::CPAN::Meta> has been added to the core (version 0.05).

=back

=head2 Updated Modules

=over

=item C<feature>

The meaning of the C<:5.10> and C<:5.10.X> feature bundles has
changed slightly. The last component, if any (ie C<X>) is simply ignored.
This is predicated on the assumption that new features will not, in
general, be added to maintenance releases. So  C<:5.10> and C<:5.10.X>
have identical effect. This is a change to the behaviour documented for
5.10.0.

=item *

C<Attribute::Handlers> upgraded from version 0.79 to 0.83

=item *

C<Archive::Extract> upgraded from version 0.24 to 0.30

=item *

C<Archive::Tar> upgraded from version 1.38 to 1.46

=item *

C<Autoloader> upgraded from version 5.63 to 5.68

=item *

C<B> upgraded from version 1.17 to 1.22

=item *

C<B::Deparse> upgraded from version 0.83 to 0.87

=item *

C<CPAN> upgraded from version 1.9205 to 1.93_03 

=item *

C<CPANPLUS::Dist::Build> upgraded from version 0.06_02 to 0.20

=item *

C<Devel::PPPort> upgraded from version 3.13 to 3.17

=item *

C<DB_File> upgraded from version 1.816_1 to 1.820

=item *

C<Digest::MD5> upgraded from version 2.36_01 to 2.38

=item *

C<Dynaloader> XXX the "1.09" in 5.8.9 is probably different from that in
bleed/maint

=item *

C<Encode> upgraded from version 2.23 to 2.33

=item *

C<Filter::Simple> upgraded from version 0.82 to 0.84

=item *

C<IPC::SysV> upgraded from version 1.05 to 2.01

=item *

C<ExtUtils::Command> upgraded from version 1.13 to 1.16

=item *

C<ExtUtils::Constant> XXX various .pms from this have newer versions than
CPAN, both in 5.10.0 and 5.10.x

=item *

C<ExtUtils::Install> upgraded from version 1.44 to 1.52

=item *

C<ExtUtils::MakeMaker> upgraded from version 6.42 to 6.50


=item *

C<ExtUtils::Manifest> upgraded from version 1.51_01 to 1.56

=item *

C<Filter::Util::Call> upgraded from version 1.07 to 1.08

=item *

C<Fatal> upgraded from version 1.05 to 1.999. See also the new pragma
C<autodie>.

=item *

C<Getopt::Long> upgraded from version 2.37 to 2.38

=item *

C<Hash::Util::FieldHash> upgraded from version 1.03 to 1.03_01. XXX
This fixes a memory leak.

=item *

C<IO> upgraded from version 1.23_01 to 1.23_02 XXX

This makes non-blocking mode work on Windows in IO::Socket::INET [CPAN #43573].

=item *

C<Log::Message> upgraded from version 0.01 to 0.02

=item *

C<Math::Complex> upgraded from version 1.37 to 1.56

=item *

C<Module::Build> upgraded from version 0.2808_01 to 0.32

=item *

C<Module::CoreList> upgraded from version 2.13 to 2.17

=item *

C<Module::Load> upgraded from version 0.12 to 0.16

=item *

C<Module::Load::Conditional> upgraded from version 0.22 to 0.30

=item *

C<Module::Loaded> upgraded from version 0.01 to 0.02

=item *

C<Module::Pluggable> upgraded from version 3.6 to 3.9_01 XXX

=item *

C<NEXT> upgraded from version 0.60_01 to 0.63

=item *

C<Package::Constants> upgraded from version 0.01 to 0.02

=item *

C<Pod::Parser> upgraded from version 1.35 to 1.37

=item *

C<Pod::MAN> upgraded from version 2.16 to 2.22

=item *

C<Pod::Text> upgraded from version 3.08 to 3.13

=item *

C<Posix> upgraded from version 1.13 to 1.17

=item *

C<Storable> XXX the "2.19" in 5.8.9 is probably different from that in
bleed/maint

=item *

C<Switch> upgraded from version 2.13 to 2.14

=item *

C<Symbol> upgraded from version 1.06 to 1.07

=item *

C<threads> upgraded from version 1.67 to 1.72

=item *

C<threads::shared> upgraded from version 1.14 to 1.28

=item *

C<Term::ANSIColor> upgraded from version 1.12 to 2.00

=item *

C<Test::Harness> upgraded from version 2.64 to 3.16
XXX major upgrade - add some blurb ???

=item *

C<Test::Simple> upgraded from version 0.80 to 0.86_01 XXX not a CPAN release

=item *

C<Text::Tabs> upgraded from version 2007.1117 to 2009.0305

=item *

C<Text::Wrap> upgraded from version 2006.1117 to 2009.0305

=item *

C<Time::HiRes> upgraded from version 1.9711 to 1.9719

=item *

C<Time::Piece> upgraded from version 1.12 to 1.13_03 XXX

=item *

C<Unicode::Normalize> upgraded from version 1.02 to 1.03

=item *

C<Unicode::UCD> upgraded from version 0.25 to 0.27

=item *

C<Win32> upgraded from version 0.34 to version 0.39

=item *

C<Win32API::File> upgraded from version 0.1001_01 to 0.1101

=back

=head1 Utility Changes

=head2 F<h2ph>

Now looks in C<include-fixed> too, which is a recent addition to gcc's
search path.


=head2 F<h2xs>

No longer incorrectly treats enum values like macros.

Now handles C++ style constants (C<//>) properly in enums.

=head1 New Documentation

L<perlperf> by Richard Foley, provides an introduction to the use of
performance and optimization techniques which can be used with particular
reference to perl programs.

L<perlrepository> describes how to access the perl source using git.

=head1 Performance Enhancements

=over

=item *

A new internal cache means that C<isa()> will often be faster.

=back

=head1 Installation and Configuration Improvements

=head2 Configuration improvements

if C<vendorlib> and C<vendorarch> are the same, then they are only added to
C<@INC> once.

C<$Config{usedevel}> and the C-level C<PERL_USE_DEVEL> are now defined if
perl is built with  C<-Dusedevel>.

=head2 Compilation improvements

=head2 Installation improvements.

=head2 Platform Specific Changes

=head3 NetBSD

hints now supports versions 5.*.



=head1 Selected Bug Fixes

=head2 Other fixes

=over

=item *

Fixed memory leak on C<while (1) { map 1, 1 }> [RT # 53038].

=item *

Some potential coredumps in PerlIO fixed [RT # 57322,54828].

=item *

The debugger now works with lvalue subroutines

=item *

The debugger's C<m> command was broken on modules that defined constants
[RT #61222].


=item *

C<crypt()> and string complement could return tainted values for untainted
arguments [RT # 59998].

=item *

The C<-i.sufffix> command-line switch now recreates the file using
restricted permissions, before changing its mode to match the original
file. This eliminates a potential race condition.

=item *

On some UNIX systems, the value in C<$?> would not have the top bit set
(C<$? & 128>) even if the child core dumped.

=item *

Under some circumstances, $^R could incorrectly become undefined
[RT # 57042].

=item *

(XS) In various hash functions, passing a pre-computed hash to when the
key is utf8 might result in an incorrect lookup.

=item *

(XS) Including F<XSUB.h> before F<perl.h> gave a compile-time error
[RT #57176].

=item *

C<$object->isa('Foo')> would report false if the package C<Foo> didn't
exist, even if the object's C<@ISA> contained C<Foo>.

=item *

Bitwise operations on references could crash the interpreter, e.g.
C<$x=\$y; $x |= "foo"> [RT #54956].

=item *

Patterns including alternation might be sensitive to the internal UTF8
representation, e.g.

    my $byte = chr(192);
    my $utf8 = chr(192); utf8::upgrade($utf8);
    $utf8 =~ /$byte|X}/i;	# failed in 5.10.0

=item *

Within utf8-encoded Perl source files (i.e. where C<use utf8> is in
effect), double-quoted literal strings could be corrupted where a C<\xNN>,
C<\0NNN> or C<\N{}> is followed by a literal character with ordinal value
greater than 255 [RT #59908].

=item *

C<B::Deparse> failed to correctly deparse various constructs:
C<readpipe STRING> [RT #62428], C<CORE::require(STRING)> [RT #62488],
C<sub foo(_)> [RT #62484]. Also, constant subroutines were deparsed as
their values.

=item *

Using C<setpgrp()> with no arguments could corrupt the perl stack.

=item *

The block form of C<eval> is now specifically trappable by C<Safe> and
C<ops>.  Previously it was erroneously treated like string C<eval>.

=item *

In 5.10.0, the two characters C<[~> were sometimes parsed as the smart
match operator (C<~~>) [RT #63854].

=item *

In 5.10.0, the C<*> quantifier in patterns was sometimes treated as
C<{0,32767}> [RT #60034]. For example, this match would fail:

    ("ab" x 32768) =~ /^(ab)*$/

=item *

C<shmget> was limited to a 32 bit segment size on a 64 bit OS [RT #63924].


=back

=head1 New or Changed Diagnostics

=head2 Can't locate package %s for the parents of %s

This warning has been removed. In general, it only got produced in
conjunction with other warnings, and removing it allowed an isa lookup
optimisation to be added.

=head1 Changed Internals

C<vcroak()> now accepts a null first argument.

New macros C<dSAVEDERRNO>, C<dSAVE_ERRNO>, C<SAVE_ERRNO>, C<RESTORE_ERRNO>
have been added to formalise the temporary saving of the C<errno>
variable.

The function C<Perl_sv_insert_flags> has been added to augment
C<Perl_sv_insert>.

The function C<Perl_croak_xs_usage> has been added as a wrapper to
C<Perl_croak>.

=head1 Known Problems

=head2 Platform Specific Problems

=head1 Deprecations

The following items are now deprecated.

=over

=item *

C<Switch> is buggy and should be avoided. From perl 5.11.0 onwards it is
intended that any use of the core version of this module will emit a
warning, and that the module will eventually be removed from the core
(probably in perl 5.14.0). See L<perlsyn/"Switch statements"> for its
replacement.

=item *

C<suidperl> will be removed in 5.12.0. This provides a mechanism to
emulate setuid permission bits on systems that don't support it properly.

=back

=head1 Acknowledgements

Some of the work in this release was funded by a TPF grant.

XXX more to come

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles
recently posted to the comp.lang.perl.misc newsgroup and the perl
bug database at http://bugs.perl.org/ .  There may also be
information at http://www.perl.org/ , the Perl Home Page.

If you believe you have an unreported bug, please run the B<perlbug>
program included with your release.  Be sure to trim your bug down
to a tiny but sufficient test case.  Your bug report, along with the
output of C<perl -V>, will be sent off to perlbug@perl.org to be
analysed by the Perl porting team.

=head1 SEE ALSO

The F<Changes> file for exhaustive details on what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
