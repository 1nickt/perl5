=head1 NAME

perldelta - what is new for perl v5.8.6

=head1 DESCRIPTION

This document describes differences between the 5.8.5 release and
the 5.8.6 release.

=head1 Incompatible Changes

There are no changes incompatible with 5.8.5.

=head1 Core Enhancements

The perl interpreter is now more tolerant of UTF-16-encoded scripts.

On Win32, Perl can now use non-IFS compatible LSPs, which allows Perl
work in conjunction with firewalls such as McAfee Guardian.

=head1 Modules and Pragmata

=over 4

=item *

Cwd upgraded to version 2.21

=item *

Devel::PPPort upgraded to version 3.03

=item *

File::Spec upgraded to version 0.90

=item *

Encode upgraded to version 2.04

=item *

Math::BigInt upgraded to version 1.73

=item *

Math::Rat upgraded to version 0.13

=item *

MIME::Base64 upgraded to version 3.05

=item *

POSIX::sigprocmask function can now retrieve the current signal mask without
also setting it.

=item *

Time::HiRes upgraded to version 1.65

=back

=head1 Utility Changes

Perl has a new -dt command-line flag, to which enables threads support in the
debugger

=head1 New Documentation

=head1 Performance Enhancements

C<reverse sort ...> is now optimised to sort in reverse, avoiding the
generation of a temporary intermediate list.

C<for (reverse @foo)> now iterates in reverse, avoiding the generation of a
temporary reversed list.

=head1 Installation and Configuration Improvements

=head1 Selected Bug Fixes

The regexp engine is now more robust when give invalid utf8 input, as
sometimes generated by buggy XS modules.

A regex in C<STDOUT>'s destructor use to coredump, because the regex pad
was already freed. This is fixed.

C<goto &> is now more robust - bugs in deep recursion and chained C<goto &>
have been fixed.

Array delete no longer leaks memory. A pop of an item from a shared array
reference no longer causes a leak.

C<eval_sv()> failing a taint test could corrupt the stack - this is now fixed.

On platforms with 64 bit pointers numeric comparison operators used to
erroneously compare the addresses of references that are overloaded, rather
than using the overloaded values. This is now fixed.

C<read> into a UTF8-encoded buffer with an offset off the end of the buffer
no longer miss-calculates buffer lengths.

There was an optimisation for C<sort {$b cmp $a}> which assumed that Perl's
C<sort> is not guaranteed stable. In perl 5.6.x and earlier no guarantee was
made, so this optimstation was valid. 5.8.0 introduced a guarantee of
stability in the default <sort> implementation, rendering this optimisation
invalid in specific cases. This has now been fixed.


=head1 New or Changed Diagnostics

=head1 Changed Internals

Most C<C> source files now have comments at the top explaining their purpose,
which should help anyone wishing to get an overview of the implementation.

=head1 New Tests

There are significantly more tests for the C<B> suite of modules.

=head1 Known Problems

=head1 Platform Specific Problems

XXX What's failing on VMS?

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles
recently posted to the comp.lang.perl.misc newsgroup and the perl
bug database at http://bugs.perl.org.  There may also be
information at http://www.perl.org, the Perl Home Page.

If you believe you have an unreported bug, please run the B<perlbug>
program included with your release.  Be sure to trim your bug down
to a tiny but sufficient test case.  Your bug report, along with the
output of C<perl -V>, will be sent off to perlbug@perl.org to be
analysed by the Perl porting team.  You can browse and search
the Perl 5 bugs at http://bugs.perl.org/

=head1 SEE ALSO

The F<Changes> file for exhaustive details on what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut

Yes. It's boring. Enjoy. :-)
